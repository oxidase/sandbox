language: cpp

dist: trusty

branches:
  only:
    - master

matrix:
  fast_finish: true

  include:

    # - os: linux
    #   compiler: "gcc-5-release"
    #   addons: &gcc5
    #     apt:
    #       sources: ['ubuntu-toolchain-r-test']
    #       packages: ['g++-5', 'libbz2-dev', 'libstxxl-dev', 'libstxxl1', 'libxml2-dev', 'libzip-dev', 'lua5.1', 'liblua5.1-0-dev', 'libtbb-dev', 'libgdal-dev', 'libluabind-dev', 'libboost-all-dev', 'ccache']
    #   env: CCOMPILER='gcc-5' CXXCOMPILER='g++-5' BUILD_TYPE='Release'

    - os: linux
      compiler: "gcc-5-release-32bit"
      addons: &gcc5
        apt:
          sources: ['ubuntu-toolchain-r-test']
          #packages: ['g++-5-multilib', 'libbz2-dev:i386', 'libstxxl-dev:i386', 'libstxxl1:i386', 'libxml2-dev:i386', 'libzip-dev:i386', 'lua5.1:i386', 'liblua5.1-0-dev:i386', 'libtbb-dev:i386', 'libgdal-dev:i386', 'libluabind-dev:i386', 'libboost-all-dev:i386', 'ccache']
          packages: ['g++-5-multilib', 'libbz2-dev:i386', 'libxml2-dev:i386', 'lua5.1:i386', 'liblua5.1-0-dev:i386', 'libboost-all-dev:i386']
      env: CCOMPILER='gcc-5' CXXCOMPILER='g++-5 -m32' BUILD_TYPE='Release'

before_install:
  # Make sure apt is up to date.
  #- sudo apt-get update -qq
  # For native code tests, we need some additional libraries if we are in a 64-bit environment.
  #- if [ `uname -m` = x86_64 ]; then sudo apt-get install -qq --force-yes gcc-multilib g++-5-multilib > /dev/null; fi
  - make

script:
  - ./sandbox

